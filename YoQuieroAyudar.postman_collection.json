{
	"variables": [],
	"info": {
		"name": "YoQuieroAyudar copy",
		"_postman_id": "8229829e-ee95-9aeb-7253-1c771bf271a8",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Modify password",
			"description": "",
			"item": [
				{
					"name": "change password",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var result = tv4.validateResult(jsonData, {",
									"    \"type\": \"object\",",
									"        \"properties\": {",
									"        \"message\": \"string\"",
									"    },",
									"    \"required\": [\"message\"]",
									"});",
									"if(!result.valid){ tests[result.error.message] = false; } else { tests[\"Valid data\"] = true; }",
									"",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.setEnvironmentVariable(\"USER_PASSWORD\", \"newpassword\")"
								]
							}
						}
					],
					"request": {
						"url": "{{url}}/change_password",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"token\"      : \"{{USER_TOKEN}}\",\r\n    \"password\"  : \"{{USER_PASSWORD}}\"\r\n}\r\n"
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Recharge account",
			"description": "",
			"item": [
				{
					"name": "01 signup USER",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var result = tv4.validateResult(jsonData, {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"message\" : \"string\"",
									"    },",
									"    \"required\": [\"message\"]",
									"});",
									"if(!result.valid){ tests[result.error.message] = false; } else { tests[\"Valid data\"] = true; }"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var time = (new Date().getTime())/1000\r",
									"postman.setEnvironmentVariable(\"USER_EMAIL\", \"api-test-user-\" + time + \"@sejas.es\")\r",
									"postman.setEnvironmentVariable(\"USER_PASSWORD\", \"api-test-user-\" + time)"
								]
							}
						}
					],
					"request": {
						"url": "{{url}}/signup",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"mail\" : \"{{USER_EMAIL}}\",\n    \"password\" : \"{{USER_PASSWORD}}\",\n    \"status\" : \"USER\",\n    \"first_name\" : \"John\",\n    \"last_name\" : \"Rambo\",\n    \"birthday\" : \"2002-10-02T15:00:00Z\",\n    \"nationality\" : \"FR\",\n    \"country_of_residence\" : \"FR\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "02 signin USER for token",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var result = tv4.validateResult(jsonData, {",
									"    \"type\": \"object\",",
									"        \"properties\": {",
									"        \"token\": \"string\"",
									"    },",
									"    \"required\": [\"token\"]",
									"});",
									"if(!result.valid){ tests[result.error.message] = false; } else { tests[\"Valid data\"] = true; ",
									"    ",
									"}",
									"postman.setEnvironmentVariable(\"USER_TOKEN\", jsonData.token);",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{url}}/signin",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"mail\"      : \"{{USER_EMAIL}}\",\r\n    \"password\"  : \"{{USER_PASSWORD}}\"\r\n}\r\n"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "03 charging USER account",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var result = tv4.validateResult(jsonData, {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"AccesKey\" : \"string\",",
									"        \"PreregistrationData\" : \"string\",",
									"        \"CardRegistrationURL\" : \"string\"",
									"    },",
									"    \"required\": [\"data\", \"accessKeyRef\", \"returnURL\", \"cardRegistrationURL\"]",
									"});",
									"if(!result.valid){ tests[result.error.message] = false; } else { tests[\"Valid data\"] = true; }",
									"",
									"postman.setEnvironmentVariable(\"USER_data\", jsonData.data);",
									"postman.setEnvironmentVariable(\"USER_accessKeyRef\", jsonData.accessKeyRef);",
									"postman.setEnvironmentVariable(\"USER_returnURL\", jsonData.returnURL);",
									"postman.setEnvironmentVariable(\"USER_cardRegistrationURL\", jsonData.cardRegistrationURL);",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{url}}/register_card",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{USER_TOKEN}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"amount\" : 10\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "04 direct registration request",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Token received\"] = responseBody.indexOf(\"data=\") > -1;",
									"",
									"",
									"postman.setEnvironmentVariable(\"USER_CARD_TOKEN\", responseBody);"
								]
							}
						}
					],
					"request": {
						"url": "{{USER_cardRegistrationURL}}",
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "data",
									"value": "{{USER_data}}",
									"type": "text",
									"enabled": true
								},
								{
									"key": "accessKeyRef",
									"value": "{{USER_accessKeyRef}}",
									"type": "text",
									"enabled": true
								},
								{
									"key": "cardNumber",
									"value": "4706750000000017",
									"type": "text",
									"enabled": true
								},
								{
									"key": "cardExpirationDate",
									"value": "0916",
									"type": "text",
									"enabled": true
								},
								{
									"key": "cardCvx",
									"value": "123",
									"type": "text",
									"enabled": true
								},
								{
									"key": "",
									"value": "",
									"type": "text",
									"enabled": true
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "05 register card + recharge",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var result = tv4.validateResult(jsonData, {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"message\" : \"string\"",
									"    },",
									"    \"required\": [\"message\"]",
									"});",
									"if(!result.valid){ tests[result.error.message] = false; } else { tests[\"Valid data\"] = true; }",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{url}}/recharge_account",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{USER_TOKEN}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"token\" : \"{{USER_CARD_TOKEN}}\",\n    \"amount\" : 10\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "signup ASSO",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var result = tv4.validateResult(jsonData, {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"message\" : \"string\"",
									"    },",
									"    \"required\": [\"message\"]",
									"});",
									"if(!result.valid){ tests[result.error.message] = false; } else { tests[\"Valid data\"] = true; }"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var time = (new Date().getTime())/1000\r"
								]
							}
						}
					],
					"request": {
						"url": "{{url}}/signup",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"mail\" : \"{{ASSO_EMAIL}}\",\r\n    \"password\" : \"{{ASSO_PASSWORD}}\",\r\n    \"name\" : \"{{ASSO_NAME}}\",\r\n    \"status\" : \"ASSO\",\r\n    \"first_name\" : \"{{ASSO_CONTACT_NAME}}\",\r\n    \"last_name\" : \"{{ASSO_CONTACT_SURNAME}}\",\r\n    \"birthday\" : \"{{ASSO_CONTACT_BIRTHDAY}}\",\r\n    \"nationality\" : \"{{ASSO_COUNTRY}}\",\r\n    \"country_of_residence\" : \"{{ASSO_COUNTRY}}\",\r\n    \"bank_account_iban\": \"{{ASSO_IBAN}}\",\r\n    \"bank_account_bic\": \"{{ASSO_BIC}}\",\r\n    \"country\": \"{{ASSO_COUNTRY}}\",\r\n    \"address\": \"{{ASSO_ADDRESS}}\",\r\n    \"description\": \"{{ASSO_DESC}}\",\r\n    \"logo_url\": \"{{ASSO_LOGO}}\",\r\n    \"twitter_username\": \"{{ASSO_TWITTER}}\"\r\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "signin ASSO for token",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var result = tv4.validateResult(jsonData, {",
									"    \"type\": \"object\",",
									"        \"properties\": {",
									"        \"token\": \"string\"",
									"    },",
									"    \"required\": [\"token\"]",
									"});",
									"if(!result.valid){ tests[result.error.message] = false; } else { tests[\"Valid data\"] = true; ",
									"    ",
									"}",
									"postman.setEnvironmentVariable(\"ASSO_TOKEN\", jsonData.token);",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{url}}/signin",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"mail\"      : \"{{ASSO_EMAIL}}\",\r\n    \"password\"  : \"{{ASSO_PASSWORD}}\"\r\n}\r\n"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "get asso",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var result = tv4.validateResult(jsonData, {",
									"    \"type\": \"object\",",
									"        \"properties\": {",
									"        \"list\": \"array\"",
									"    },",
									"    \"required\": [\"list\"]",
									"});",
									"if(!result.valid){ tests[result.error.message] = false; } else { tests[\"Valid data\"] = true; }",
									"",
									"tests[\"ASSO must contain 1 ASSO\"] = jsonData.list.length == 1",
									"",
									"postman.setEnvironmentVariable(\"ASSO_ID\", jsonData.list[0].id);",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{url}}/asso",
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{ASSO_TOKEN}}",
								"description": ""
							}
						],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Donation",
					"request": {
						"url": "{{url}}/donation",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{USER_TOKEN}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"association_id\" : {{ASSO_ID}},\n    \"amount\" : 10\n}"
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Recover password",
			"description": "",
			"item": [
				{
					"name": "recover password",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var result = tv4.validateResult(jsonData, {",
									"    \"type\": \"object\",",
									"        \"properties\": {",
									"        \"message\": \"string\"",
									"    },",
									"    \"required\": [\"message\"]",
									"});",
									"if(!result.valid){ tests[result.error.message] = false; } else { tests[\"Valid data\"] = true; }",
									"",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.setEnvironmentVariable(\"USER_EMAIL\", \"boolow5@hotmail.com\")"
								]
							}
						}
					],
					"request": {
						"url": "{{url}}/recover_password",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"mail\" : \"{{USER_EMAIL}}\"\r\n}\r\n"
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "asso",
			"description": "",
			"item": [
				{
					"name": "signin ADMIN for token",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var result = tv4.validateResult(jsonData, {",
									"    \"type\": \"object\",",
									"        \"properties\": {",
									"        \"token\": \"string\"",
									"    },",
									"    \"required\": [\"token\"]",
									"});",
									"if(!result.valid){ tests[result.error.message] = false; } else { tests[\"Valid data\"] = true; ",
									"    ",
									"}",
									"postman.setEnvironmentVariable(\"ADMIN_TOKEN\", jsonData.token);",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{url}}/signin",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"mail\"      : \"{{ADMIN_EMAIL}}\",\r\n    \"password\"  : \"{{ADMIN_PASSWORD}}\"\r\n}\r\n"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "signup ASSO",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var result = tv4.validateResult(jsonData, {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"message\" : \"string\"",
									"    },",
									"    \"required\": [\"message\"]",
									"});",
									"if(!result.valid){ tests[result.error.message] = false; } else { tests[\"Valid data\"] = true; }"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var time = (new Date().getTime())/1000\r",
									"postman.setEnvironmentVariable(\"ASSO_EMAIL\", \"api-test-asso-\" + time + \"@example.com\")\r",
									"postman.setEnvironmentVariable(\"ASSO_PASSWORD\", \"api-test-asso-\" + time)"
								]
							}
						}
					],
					"request": {
						"url": "{{url}}/signup",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"mail\" : \"{{ASSO_EMAIL}}\",\r\n    \"password\" : \"{{ASSO_PASSWORD}}\",\r\n    \"name\" : \"name ASSO\",\r\n    \"status\" : \"ASSO\",\r\n    \"first_name\" : \"John\",\r\n    \"last_name\" : \"Rambo\",\r\n    \"birthday\" : \"2002-10-02T15:00:00Z\",\r\n    \"nationality\" : \"FR\",\r\n    \"country_of_residence\" : \"FR\"\r\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "get asso",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var result = tv4.validateResult(jsonData, {",
									"    \"type\": \"object\",",
									"        \"properties\": {",
									"        \"list\": \"array\"",
									"    },",
									"    \"required\": [\"list\"]",
									"});",
									"if(!result.valid){ tests[result.error.message] = false; } else { tests[\"Valid data\"] = true; }",
									"",
									"tests[\"ASSO must contain 1 ASSO\"] = jsonData.list.length == 1",
									"",
									"postman.setEnvironmentVariable(\"ASSO_ID\", jsonData.list[0].id);",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{url}}/asso",
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{ASSO_TOKEN}}",
								"description": ""
							}
						],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "update asso",
					"request": {
						"url": "{{url}}/asso/{{ASSO_ID}}",
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{ADMIN_TOKEN}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"active\" : true\r\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "search asso",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var result = tv4.validateResult(jsonData, {",
									"    \"type\": \"object\",",
									"        \"properties\": {",
									"        \"list\": \"array\"",
									"    },",
									"    \"required\": [\"list\"]",
									"});",
									"if(!result.valid){ tests[result.error.message] = false; } else { tests[\"Valid data\"] = true; }",
									"",
									"tests[\"ASSO must contain at least 1 ASSO\"] = jsonData.list.length >= 1"
								]
							}
						}
					],
					"request": {
						"url": "{{url}}/search/asso",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{ASSO_TOKEN}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"POS_id\" : {{ASSO_ID}}\r\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "search asso copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var result = tv4.validateResult(jsonData, {",
									"    \"type\": \"object\",",
									"        \"properties\": {",
									"        \"list\": \"array\"",
									"    },",
									"    \"required\": [\"list\"]",
									"});",
									"if(!result.valid){ tests[result.error.message] = false; } else { tests[\"Valid data\"] = true; }",
									"",
									"tests[\"ASSO must contain at least 1 ASSO\"] = jsonData.list.length >= 1"
								]
							}
						}
					],
					"request": {
						"url": "{{url}}/search/pos",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{ASSO_TOKEN}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"geo_x\" : 1.2,\r\n    \"geo_y\" : 1.2\r\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "signin ASSO for token",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var result = tv4.validateResult(jsonData, {",
									"    \"type\": \"object\",",
									"        \"properties\": {",
									"        \"token\": \"string\"",
									"    },",
									"    \"required\": [\"token\"]",
									"});",
									"if(!result.valid){ tests[result.error.message] = false; } else { tests[\"Valid data\"] = true; ",
									"    ",
									"}",
									"postman.setEnvironmentVariable(\"ASSO_TOKEN\", jsonData.token);",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{url}}/signin",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"mail\"      : \"{{ASSO_EMAIL}}\",\r\n    \"password\"  : \"{{ASSO_PASSWORD}}\"\r\n}\r\n"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "signup twitter ASSO",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var result = tv4.validateResult(jsonData, {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"message\" : \"string\"",
									"    },",
									"    \"required\": [\"message\"]",
									"});",
									"if(!result.valid){ tests[result.error.message] = false; } else { tests[\"Valid data\"] = true; }"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var token = 'magictokenvalido.asdifjas90dfja9sdjf9asjdfa9sjfa9sjdf9asjf9asjdf9asjf90asjfd9j...'",
									"var asso =     {",
									"    \"First name\": \"Nombre\",",
									"    \"Last name\": \"Apellidos\",",
									"    \"Charity\": \"Nomre de la asociacion\",",
									"    \"email\": \"email@microhuchasolidaria.org\",",
									"    \"IBAN\": \"ES2030UNIBANVALIDO\",",
									"    \"BIC\": \"BICVALIDO\",",
									"  }",
									"",
									"",
									"postman.setEnvironmentVariable(\"ASSO_NAME\", asso.Charity)",
									"postman.setEnvironmentVariable(\"ASSO_FIRSTNAME\", asso[\"First name\"])",
									"postman.setEnvironmentVariable(\"ASSO_LASTNAME\", asso[\"Last name\"])",
									"postman.setEnvironmentVariable(\"ASSO_IBAN\", asso.IBAN)",
									"postman.setEnvironmentVariable(\"ASSO_BIC\", asso.BIC)",
									"postman.setEnvironmentVariable(\"ASSO_EMAIL\", asso.email)",
									"postman.setEnvironmentVariable(\"MAGIC_TOKEN\", token)",
									"postman.setEnvironmentVariable(\"ASSO_BIRTHDAY\", (new Date()).toISOString())"
								]
							}
						}
					],
					"request": {
						"url": "{{url}}/signup_twitter_asso",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"token\" : \"{{MAGIC_TOKEN}}\",\r\n    \"bank_account_iban\" : \"{{ASSO_IBAN}}\",\r\n    \"bank_account_bic\" : \"{{ASSO_BIC}}\",\r\n    \"name\" : \"{{ASSO_NAME}}\",\r\n    \"country_of_residence\" : \"{{ASSO_COUNTRY}}\",\r\n    \"nationality\" : \"{{ASSO_COUNTRY}}\",\r\n    \"first_name\" : \"{{ASSO_FIRSTNAME}}\",\r\n    \"last_name\" : \"{{ASSO_LASTNAME}}\",\r\n    \"birthday\" : \"{{ASSO_BIRTHDAY}}\",\r\n    \"password\" : \"{{ASSO_PASSWORD}}\",\r\n    \"mail\" : \"{{ASSO_EMAIL}}\"\r\n}"
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "auth",
			"description": "",
			"item": [
				{
					"name": "signin ADMIN for token copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var result = tv4.validateResult(jsonData, {",
									"    \"type\": \"object\",",
									"        \"properties\": {",
									"        \"token\": \"string\"",
									"    },",
									"    \"required\": [\"token\"]",
									"});",
									"if(!result.valid){ tests[result.error.message] = false; } else { tests[\"Valid data\"] = true; ",
									"    ",
									"}",
									"postman.setEnvironmentVariable(\"ADMIN_TOKEN\", jsonData.token);",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{url}}/signin",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"mail\"      : \"{{ADMIN_EMAIL}}\",\r\n    \"password\"  : \"{{ADMIN_PASSWORD}}\"\r\n}\r\n"
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "garbage",
			"description": "",
			"item": [
				{
					"name": "activate POS",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"",
									"var result = tv4.validateResult(jsonData, {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"message\" : \"string\"",
									"    },",
									"    \"required\": [\"message\"]",
									"});",
									"if(!result.valid){ tests[result.error.message] = false; } else { tests[\"Valid data\"] = true; }"
								]
							}
						}
					],
					"request": {
						"url": "{{url}}/user/{{POS_EMAIL}}",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ADMIN_TOKEN}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"status\" : \"active\"\r\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "login fail",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"Status code is 401\"] = responseCode.code === 401;",
									"tests[\"Test error exists\"] = jsonData.hasOwnProperty(\"errors\");",
									"",
									"var result = tv4.validateResult(jsonData, {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"errors\" : \"object\"",
									"    },",
									"    \"required\": [\"errors\"]",
									"});",
									"if(!result.valid){ tests[result.error.message] = false; } else { tests[\"Valid data\"] = true; }"
								]
							}
						}
					],
					"request": {
						"url": "{{url}}/signin",
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"mail\" : \"monmail\",\n    \"password\" : \"monpass\"\n}"
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "new",
			"description": "",
			"item": []
		},
		{
			"name": "twitter sync",
			"description": "",
			"item": [
				{
					"name": "twitter sync",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var result = tv4.validateResult(jsonData, {",
									"    \"type\": \"object\",",
									"        \"properties\": {",
									"        \"entity\": \"string\"",
									"    },",
									"    \"required\": [\"entity\"]",
									"});",
									"if(!result.valid){ tests[result.error.message] = false; } else { tests[\"Valid data\"] = true; ",
									"    ",
									"}",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{url}}/twitter_sync",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ADMIN_TOKEN}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "signup USER",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"var result = tv4.validateResult(jsonData, {",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"        \"message\" : \"string\"",
							"    },",
							"    \"required\": [\"message\"]",
							"});",
							"if(!result.valid){ tests[result.error.message] = false; } else { tests[\"Valid data\"] = true; }",
							"",
							""
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var time = (new Date().getTime())\r",
							"postman.setEnvironmentVariable(\"USER_EMAIL\", \"api-test-user-\" + time + \"@example.com\")\r",
							"postman.setEnvironmentVariable(\"USER_PASSWORD\", \"api-test-user-\" + time)"
						]
					}
				}
			],
			"request": {
				"url": "{{url}}/signup",
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"mail\" : \"{{USER_EMAIL}}\",\r\n    \"password\" : \"{{USER_PASSWORD}}\",\r\n    \"status\" : \"USER\",\r\n    \"first_name\" : \"John\",\r\n    \"last_name\" : \"Rambo\",\r\n    \"birthday\" : \"2002-10-02T15:00:00Z\",\r\n    \"nationality\" : \"FR\",\r\n    \"country_of_residence\" : \"FR\"\r\n}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "signup POS",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"var result = tv4.validateResult(jsonData, {",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"        \"message\" : \"string\"",
							"    },",
							"    \"required\": [\"message\"]",
							"});",
							"if(!result.valid){ tests[result.error.message] = false; } else { tests[\"Valid data\"] = true; }"
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var time = (new Date().getTime())\r",
							"postman.setEnvironmentVariable(\"POS_EMAIL\", \"api-test-pos-\" + time + \"@example.com\")\r",
							"postman.setEnvironmentVariable(\"POS_PASSWORD\", \"api-test-pos-\" + time)"
						]
					}
				}
			],
			"request": {
				"url": "{{url}}/signup",
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"mail\" : \"{{POS_EMAIL}}\",\r\n    \"password\" : \"{{POS_PASSWORD}}\",\r\n    \"pos_name\" : \"name POS\",\r\n    \"status\" : \"POS\",\r\n    \"first_name\" : \"John\",\r\n    \"last_name\" : \"Rambo\",\r\n    \"birthday\" : \"2002-10-02T15:00:00Z\",\r\n    \"nationality\" : \"FR\",\r\n    \"country_of_residence\" : \"FR\"\r\n}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "signin POS for token",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"var result = tv4.validateResult(jsonData, {",
							"    \"type\": \"object\",",
							"        \"properties\": {",
							"        \"token\": \"string\"",
							"    },",
							"    \"required\": [\"token\"]",
							"});",
							"if(!result.valid){ tests[result.error.message] = false; } else { tests[\"Valid data\"] = true; ",
							"    ",
							"}",
							"postman.setEnvironmentVariable(\"POS_TOKEN\", jsonData.token);",
							""
						]
					}
				}
			],
			"request": {
				"url": "{{url}}/signin",
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"mail\"      : \"{{POS_EMAIL}}\",\r\n    \"password\"  : \"{{POS_PASSWORD}}\"\r\n}\r\n"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "signin USER for token",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"var result = tv4.validateResult(jsonData, {",
							"    \"type\": \"object\",",
							"        \"properties\": {",
							"        \"token\": \"string\"",
							"    },",
							"    \"required\": [\"token\"]",
							"});",
							"if(!result.valid){ tests[result.error.message] = false; } else { tests[\"Valid data\"] = true; ",
							"    ",
							"}",
							"postman.setEnvironmentVariable(\"USER_TOKEN\", jsonData.token);",
							""
						]
					}
				}
			],
			"request": {
				"url": "{{url}}/signin",
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"mail\"      : \"{{USER_EMAIL}}\",\r\n    \"password\"  : \"{{USER_PASSWORD}}\"\r\n}\r\n"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "get pos",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"var result = tv4.validateResult(jsonData, {",
							"    \"type\": \"object\",",
							"        \"properties\": {",
							"        \"list\": \"array\"",
							"    },",
							"    \"required\": [\"list\"]",
							"});",
							"if(!result.valid){ tests[result.error.message] = false; } else { tests[\"Valid data\"] = true; }",
							"",
							"tests[\"POS must contain 1 POS\"] = jsonData.list.length == 1",
							"",
							"postman.setEnvironmentVariable(\"POS_ID\", jsonData.list[0].id);",
							""
						]
					}
				}
			],
			"request": {
				"url": "{{url}}/pos",
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{POS_TOKEN}}",
						"description": ""
					}
				],
				"body": {},
				"description": ""
			},
			"response": []
		},
		{
			"name": "twitter sync copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"var result = tv4.validateResult(jsonData, {",
							"    \"type\": \"object\",",
							"        \"properties\": {",
							"        \"entity\": \"string\"",
							"    },",
							"    \"required\": [\"entity\"]",
							"});",
							"if(!result.valid){ tests[result.error.message] = false; } else { tests[\"Valid data\"] = true; ",
							"    ",
							"}",
							"",
							""
						]
					}
				}
			],
			"request": {
				"url": "{{url}}/twitter_sync",
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Authorization",
						"value": "Bearer {{ADMIN_TOKEN}}",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"description": ""
			},
			"response": []
		}
	]
}